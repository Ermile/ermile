@mixin flex {
	// write the css here
	display: -webkit-flex;
	display: flex;
}

@mixin paddingAll($val) {
  .pA#{$val} {padding: #{$val}px #{$val}px;}
  .pT#{$val} {padding-top: #{$val}px;}
  .pB#{$val} {padding-bottom: #{$val}px;}
  .pR#{$val} {padding-right: #{$val}px;}
  .pL#{$val} {padding-left: #{$val}px;}
  .pTB#{$val} {padding-top: #{$val}px; padding-bottom: #{$val}px;}
  .pLR#{$val} {padding-left: #{$val}px; padding-right: #{$val}px;}

  .ltr .pRa#{$val} {padding-right: #{$val}px;}
  .rtl .pRa#{$val} {padding-left: #{$val}px;}
  .ltr .pLa#{$val} {padding-left: #{$val}px;}
  .rtl .pLa#{$val} {padding-right: #{$val}px;}
}

@mixin marginAll($val) {
  .mA#{$val} {margin: #{$val}px #{$val}px;}
  .mT#{$val} {margin-top: #{$val}px;}
  .mB#{$val} {margin-bottom: #{$val}px;}
  .mR#{$val} {margin-right: #{$val}px;}
  .mL#{$val} {margin-left: #{$val}px;}
  .mTB#{$val} {margin-top: #{$val}px; margin-bottom: #{$val}px;}
  .mLR#{$val} {margin-left: #{$val}px; margin-right: #{$val}px;}

  .ltr .mRa#{$val} {margin-right: #{$val}px;}
  .rtl .mRa#{$val} {margin-left: #{$val}px;}
  .ltr .mLa#{$val} {margin-left: #{$val}px;}
  .rtl .mLa#{$val} {margin-right: #{$val}px;}
}

@mixin margin($val) {
  padding: $val $val;
}


@mixin paddingCreate($pads...) {
	padding: $pads;
}


@mixin push--auto {
	margin: {
		left: auto;
		right: auto;
	}
}


@mixin input-placeholder {
	&.mlaceholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}


@mixin overlay() {
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
}


@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
	 -moz-border-radius: $radius;
	  -ms-border-radius: $radius;
		  border-radius: $radius;
}


@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}


@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}




@mixin breakpoint($media) {
    /* Landscape phones and down */
    @if $media == phone {
        @media (max-width: 480px) { @content; }
    }
    /* Landscape phone to portrait tablet */
    @else if $media == tablet-portrait {
        @media (max-width: 767px) {@content; }
    }
    /* Portrait tablet to landscape and desktop */
    @else if $media == tablet-landscape-desktop {
        @media (min-width: 768px) and (max-width: 979px) { @content; }
    }
    /* Large desktop */
    @else if $media == large-desktop {
        @media (min-width: 1200px) { @content; }
    }
    // Non-Retina
    @else if $media == non-retina {
        @media screen and (-webkit-max-device-pixel-ratio: 1) { @content; }
    }
    // Retina Only
    @else if $media == retina {
        @media screen and (-webkit-min-device-pixel-ratio: 2) { @content; }
    }
    // Specific max width
    @else {
        @media only screen and (max-width: #{$media}px) { @content; }
    }
	@else {
	  @warn "Breakpoint mixin supports: xs, sm, md, lg";
	}
}

@mixin links ($link:null, $hover:null, $focus:null, $active:null, $visited:null) {
  @if $link {
    color: $link;
  }

  @if $hover {
    &:hover {
      color: $hover;
    }
  }
  @if $focus {
    &:focus {
      color: $focus;
    }
  }
  @if $active {
    &:active {
      color: $active;
    }
  }
  @if $visited {
    &:visited {
      color: $visited;
    }
  }
}

